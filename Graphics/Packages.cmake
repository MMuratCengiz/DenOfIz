# On windows use dxc from vcpkg, on other platforms build it from source
if (WIN32 OR LINUX)
    find_package(directx-headers CONFIG REQUIRED)
endif ()
if (WIN32)
    find_package(directx12-agility CONFIG REQUIRED)
endif ()

if (WIN32 OR LINUX)
    find_package(volk CONFIG REQUIRED)
    find_package(Vulkan REQUIRED)
    find_package(VulkanMemoryAllocator CONFIG REQUIRED)
endif ()

find_package(SDL2 CONFIG REQUIRED)
find_package(wil CONFIG REQUIRED)
find_package(directxmath CONFIG REQUIRED)
find_package(Taskflow CONFIG REQUIRED)
find_package(glog CONFIG REQUIRED)
find_package(assimp CONFIG REQUIRED)
find_package(draco CONFIG REQUIRED)
find_package(Freetype REQUIRED)
find_package(harfbuzz CONFIG REQUIRED)
find_package(msdfgen CONFIG REQUIRED)
find_package(miniz CONFIG REQUIRED)
find_package(tinyxml2 CONFIG REQUIRED)
find_path(STB_INCLUDE_DIRS "stb_image.h")
find_path(TINGLING_INCLUDE_DIRS "tiny_gltf.h")

find_package(PkgConfig)
pkg_check_modules(thorvg REQUIRED IMPORTED_TARGET thorvg)

set(OZZ_ANIMATION_DIR "${CMAKE_CURRENT_SOURCE_DIR}/_ThirdParty/ozz-animation")
if (EXISTS "${OZZ_ANIMATION_DIR}")
    set(OZZ_ANIMATION_INCLUDE_DIR "${OZZ_ANIMATION_DIR}/include")
    set(OZZ_ANIMATION_FOUND TRUE)
else ()
    message(FATAL_ERROR "ozz-animation not found in _ThirdParty directory")
endif ()


if (CRT_LINKAGE_STATIC EQUAL 1)
    set(ozz_build_msvc_rt_dll OFF CACHE BOOL "Select msvc DLL runtime library" FORCE)
    set(MSDF_ATLAS_DYNAMIC_RUNTIME OFF CACHE BOOL "Link dynamic runtime library instead of static" FORCE)
else ()
    set(ozz_build_msvc_rt_dll ON CACHE BOOL "Select msvc DLL runtime library" FORCE)
    set(MSDF_ATLAS_DYNAMIC_RUNTIME ON CACHE BOOL "Link dynamic runtime library instead of static" FORCE)
endif ()

set(ozz_build_tests OFF CACHE BOOL "Don't build ozz samples" FORCE)
set(ozz_build_samples OFF CACHE BOOL "Don't build ozz samples" FORCE)
set(ozz_build_howtos OFF CACHE BOOL "Don't build ozz howtos" FORCE)

if (LINUX)
    set(CMAKE_POSITION_INDEPENDENT_CODE ON)
endif ()

set(BUILD_SHARED_LIBS_TEMP ${BUILD_SHARED_LIBS})
set(BUILD_SHARED_LIBS OFF)
set(CMAKE_SKIP_INSTALL_RULES ON)

set(ozz_build_tools OFF CACHE BOOL "Don't build ozz tools" FORCE)
add_subdirectory(_ThirdParty/ozz-animation EXCLUDE_FROM_ALL)

set(MSDF_ATLAS_BUILD_STANDALONE OFF CACHE BOOL "Build the msdf-atlas-gen standalone executable")
set(MSDF_ATLAS_USE_SKIA OFF CACHE BOOL "Build with the Skia library")
set(MSDF_ATLAS_NO_ARTERY_FONT ON CACHE BOOL "Disable Artery Font export and do not require its submodule")
set(MSDFGEN_USE_SKIA OFF CACHE BOOL "Build msdfgen with the Skia library")
set(MSDFGEN_VCPKG_FEATURES_SET ON CACHE BOOL "Use vcpkg features")
set(VCPKG_MANIFEST_NO_DEFAULT_FEATURES ON CACHE BOOL "Disable default features")

add_subdirectory(_ThirdParty/msdf-atlas-gen EXCLUDE_FROM_ALL)
set(CMAKE_SKIP_INSTALL_RULES OFF)
set(BUILD_SHARED_LIBS ${BUILD_SHARED_LIBS_TEMP})